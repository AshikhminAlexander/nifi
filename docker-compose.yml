version: '1'
services:

  nifi:
    container_name: nifi
    image: 'apache/nifi:latest'
    ports:
      - 8443:8443
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=user
      - SINGLE_USER_CREDENTIALS_PASSWORD=password1234
    volumes:
      - ./nifi_data/nifi_content_repository:/opt/nifi/nifi-current/content_repository
      - ./nifi_data/nifi_database_repository:/opt/nifi/nifi-current/database_repository
      - ./nifi_data/nifi_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - ./nifi_data/nifi_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - ./nifi_data/nifi_logs:/opt/nifi/nifi-current/logs
      - ./nifi_data/nifi_state:/opt/nifi/nifi-current/state
      - ./nifi_data/nifi_conf:/opt/nifi/nifi-current/conf
      - ./nifi_data/nifi_drivers:/opt/nifi/nifi-current/drivers
    restart: always
    networks:
      - nifi

#  nifi-registry:
#    image: 'apache/nifi-registry'
#    ports:
#      - 18080:18080
#    environment:
#      - SINGLE_USER_CREDENTIALS_USERNAME=user
#      - SINGLE_USER_CREDENTIALS_PASSWORD=password
#    networks:
#      - nifi



  postgres:
    image: 'postgres:14.3-alpine'
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=admin
      - POSTGRES_DB=sandbox
    volumes:
      - ./sql/setup.sql:/docker-entrypoint-initdb.d/init.sql
      - ./sql/p_data:/var/lib/postgresql/data
    restart: always
    networks:
      - nifi

  minio:
    image: 'minio/minio:latest'
    ports:
      - 9000:9000
      - 9001:9001
      - 8086:8086
    volumes:
      - ./minio/data:/data
    restart: always
    command: server --console-address ":9001" /data
    environment:
      - MINIO_ROOT_USER=sysadmin
      - MINIO_ROOT_PASSWORD=4j0weh8e94
    networks:
      - nifi

networks:
  nifi:
    external: true

volumes:
  nifi_content_repository:
  nifi_database_repository:
  nifi_flowfile_repository:
  nifi_provenance_repository:
  nifi_logs:
  nifi_state:
  nifi_conf:






